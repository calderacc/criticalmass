imports:
    - { resource: parameters.yml }
    - { resource: criticalmass.yml }
    - { resource: security.yml }
    - { resource: @CalderaCriticalmassCoreBundle/Resources/config/admin.yml }
    - { resource: @CalderaCriticalmassStatisticBundle/Resources/config/admin.yml }
    - { resource: @CalderaCriticalmassPlusBundle/Resources/config/admin.yml }
    - { resource: @CalderaCriticalmassContentBundle/Resources/config/admin.yml }
    - { resource: @CalderaCriticalmassGlympseBundle/Resources/config/admin.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form: ~
    csrf_protection:
        enabled: true
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    #globals:
    #    domain: "%domain%"
    #    mobile_host: "m.%domain%"
    #    www_host: "www.%domain%"

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: true
    bundles:        [ CalderaCriticalmassDesktopBundle, CalderaCriticalmassMobileBundle, CalderaCriticalmassCoreBundle, CalderaCriticalmassStatisticBundle, CalderaCriticalmassTimelineBundle ]
    java: /usr/bin/java
    filters:
        cssrewrite: ~
        yui_js:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor.jar"
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true
        dql:
            datetime_functions:
                date: Caldera\CriticalmassCoreBundle\DQL\DateFunction

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Application\Sonata\UserBundle\Entity\User #Caldera\CriticalmassCoreBundle\Entity\User #
    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)
    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)
    registration:
        confirmation:
            enabled:    false
#            from_email:
#                address:        malte@criticalmass.in
#                sender_name:    Malte Hübner, criticalmass.in
    resetting:
        email:
            from_email:
                address:        malte@criticalmass.in
                sender_name:    Malte Hübner, criticalmass.in


sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        #sonata.admin_doctrine_orm.block.audit:
        #    contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.rss:
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        # Some specific block from the SonataMediaBundle
        #sonata.media.block.media:
        #sonata.media.block.gallery:
        #sonata.media.block.feature_media:

sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb

sonata_admin:
    security:
        handler: sonata.admin.security.handler.noop

