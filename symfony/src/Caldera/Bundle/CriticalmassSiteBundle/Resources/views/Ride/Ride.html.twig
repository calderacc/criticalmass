{% if dateTime > ride.getDateTime() %}
    {% set pastRide = true %}
{% else %}
    {% set pastRide = false %}
{% endif %}

{% set hasSocialMedia = ride.getUrl() or ride.getFacebook() or ride.getTwitter() %}

<div class="row">
    <div class="col-md-12">
        <h1>{{ ride.getFancyTitle() }}</h1>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div id="map" style="height: 350px;"></div>
    </div>
</div>


<div class="row" style="margin-top: 1em;">
    <div class="col-md-12">
        <div role="tabpanel">
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#details" aria-controls="home" role="tab" data-toggle="tab"><i class="halflings flag"></i> Details</a>
                </li>
                <li role="presentation">
                    <a href="#minimass" aria-controls="settings" role="tab" data-toggle="tab"><i class="halflings map-marker"></i> Mini-Masses <span class="badge">{{ ride.getSubrides|length }}</span></a>
                </li>
                <li role="presentation">
                    <a href="#comments" aria-controls="messages" role="tab" data-toggle="tab"><i class="halflings pencil"></i> Kommentare <span class="badge">{{ ride.getPosts|length }}</span></a>
                </li>
                {% if pastRide %}
                <li role="presentation">
                    <a href="#gallery" aria-controls="settings" role="tab" data-toggle="tab"><i class="halflings uni-camera"></i> Galerie <span class="badge">{{ ride.getPhotos|length }}</span></a>
                </li>
                {#<li role="presentation">
                    <a href="#stats" aria-controls="profile" role="tab" data-toggle="tab"><i class="halflings signal"></i> Statistik</a>
                </li>#}
                <li role="presentation">
                    <a href="#tracks" aria-controls="profile" role="tab" data-toggle="tab"><i class="halflings uni-pushpin"></i> Tracks <span class="badge">{{ ride.getActiveTracks|length }}</span></a>
                </li>
                {% endif %}
            </ul>

            <div class="tab-content">
                {% render(controller('CalderaCriticalmassSiteBundle:Ride:renderDetailsTab', { 'ride': ride } )) %}
                {% render(controller('CalderaCriticalmassSiteBundle:Ride:renderSubridesTab', { 'ride': ride } )) %}
                {% render(controller('CalderaCriticalmassSiteBundle:Ride:renderPostsTab', { 'ride': ride } )) %}

                {% if pastRide %}
                {% render(controller('CalderaCriticalmassSiteBundle:Ride:renderPhotosTab', { 'ride': ride } )) %}
                {#{% render(controller('CalderaCriticalmassSiteBundle:Ride:renderStatisticTab', { 'ride': ride } )) %}#}
                {% render(controller('CalderaCriticalmassSiteBundle:Ride:renderTracksTab', { 'ride': ride } )) %}
                {% endif %}
            </div>
        </div>
    </div>
</div>


{% if app.getUser() and pastRide %}
<div class="modal fade" id="modalEstimate" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" type="button" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Tour sch√§tzen</h4>
            </div>
            <div class="modal-body">
                {{ render(controller('CalderaCriticalmassSiteBundle:Statistic:estimateform', { 'rideId': ride.getId() })) }}
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalTrackUpload" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" type="button" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Track zu dieser Tour hochladen</h4>
            </div>
            <div class="modal-body">
                {{ render(controller('CalderaCriticalmassSiteBundle:Track:upload', { 'citySlug': city.getMainSlugString(), 'rideDate': ride.getFormattedDate() })) }}
            </div>
        </div>
    </div>
</div>
{% endif %}

<script>


    CriticalMass.loadModule('RidePage', null, null, function(ridePage) {
        ridePage.addCity('{{ city.city }}', '{{ city.title }}', '{{ city.getMainSlugString() }}', '{{ city.description }}', {{ city.latitude }}, {{ city.longitude }});

        ridePage.addRide('{{ ride.getFancyTitle() }}', '{{ ride.getDescription() }}', {{ ride.getLatitude() }}, {{ ride.getLongitude() }}, '{{ ride.getLocation() }}', '{{ ride.getDateTime.format('d.m.Y') }}', '{{ ride.getDateTime.format('H:i') }}', '{{ ride.getWeatherForecast() }}');

        {% for track in ride.getActiveTracks() %}
        ridePage.addTrack({{ track.getLatLngList() }}, {{ track.getColorRed() }}, {{ track.getColorGreen() }}, {{ track.getColorBlue() }});
        {% endfor %}

        ridePage.init();

        ridePage.focus();
    });

        {#/* City */
        var city = new City('{{ city.getCity() }}', '{{ city.getTitle() }}', '{{ city.getMainSlugString() }}', '{{ city.getDescription() }}', {{ city.getLatitude() }}, {{ city.getLongitude() }});

        /* Rides */
        var rideContainer = new Container();
        var ride = new Ride(city, '{{ ride.getFancyTitle() }}', '{{ ride.getDescription() }}', {{ ride.getLatitude() }}, {{ ride.getLongitude() }}, '{{ ride.getLocation() }}', '{{ ride.getDateTime.format('d.m.Y') }}', '{{ ride.getDateTime.format('H:i') }}', '{{ ride.getWeatherForecast() }}');
        rideContainer.add(ride);
        rideContainer.addTo(map);

        /* Subrides */
        var subrideContainer = new Container();

        {% for subride in ride.getActiveSubrides() %}
        var subride = new Subride('{% if subride.getTitle() %}{{ subride.getTitle() }}{% else %}Mini-Mass{% endif %}', '{% if subride.getDescription() %}<p>{{ subride.getDescription()|nl2br|replace({"<br />":"\\"}) }}{% endif %}', '{{ subride.getDateTime().format('H:i') }}', {{ subride.getLatitude() }}, {{ subride.getLongitude() }}, '{{ subride.getLocation() }}');
        subrideContainer.add(subride);
        {% endfor %}

        subrideContainer.addTo(map);

        $('.subride').on('click', function ()
        {
            var subRideId = $(this).data('subride');
            var subRide = subrideContainer.getEntity(subRideId);

            map.panTo(subRide.getLatLng());
            subRide.openPopup();
        });

        /* Tracks */
        var trackContainer = new Container();

        {% for track in ride.getActiveTracks() %}
        var track = new Track();
        track.setPolyline({{ track.getLatLngList() }}, {{ track.getColorRed() }}, {{ track.getColorGreen() }}, {{ track.getColorBlue() }});
        trackContainer.add(track);
        {% endfor %}

        trackContainer.addTo(map);

        $('.trackVisibility').on('click', function()
        {
            var trackNumber = $(this).data('track');

            if ($(this).prop('checked'))
            {
                trackContainer.addLayer(trackNumber);
            }
            else
            {
                trackContainer.removeLayer(trackNumber);
            }
        });

        /* Photos */
        var photoContainer = new Container();

        {% for photo in ride.getPhotos() %}
        {% if photo.hasCoordinates() %}
        var photo = new Photo({{ photo.getId() }}, {{ photo.getLatitude() }}, {{ photo.getLongitude() }}, 'Photo {{ photo.getId() }}');
        photoContainer.add(photo);
        {% endif %}
        {% endfor %}

        photoContainer.addTo(map);

        /* LayerControl */
        var layers = [];

        rideContainer.addControl(layers, 'Tour');
        subrideContainer.addControl(layers, 'Mini-Masses');
        trackContainer.addControl(layers, 'Tracks');
        photoContainer.addControl(layers, 'Fotos');

        var layerControl = L.control.groupedLayers({}, {
            'Critical Mass': layers
        }, {
            collapsed: false
        });

        layerControl.addTo(map.map);

        {% if pastRide and ride.getActiveTracks()|length > 0 %}
        map.map.fitBounds(trackContainer.getBounds());
        {% elseif ride.getActiveSubRides()|length > 0 %}
        map.map.fitBounds(subrideContainer.getBounds());
        rideContainer.getEntity(0).openPopup();
        {% else %}
        map.map.fitBounds(rideContainer.getBounds());
        rideContainer.getEntity(0).openPopup();
        {% endif %}
        #}


    domReadyQueue.push(function($) {
        //initMap();
    });
</script>