{% macro create_html_tag(tag_name, attribute_list, inner_html) %}
    {% set attributes = [] %}

    {% if attribute_list is defined and attribute_list is iterable %}
        {% for key, val in attribute_list %}
            {% set attributes = attributes | merge(['%s="%s"' | format(key, val)]) %}
        {% endfor %}
    {% endif %}

    <{{ tag_name }} {{ attributes | join(' ') | raw }}>

    {% if inner_html is defined and inner_html | length > 0 %}
        {{ inner_html | raw }}
    {% endif %}

    {% if tag_name in ['img', 'br'] %}
        />
    {% else %}
        </{{ tag_name }}>
    {% endif %}
{% endmacro %}

{% macro dropdown(button_caption, item_list, btn_class) %}
    {% import _self as bootstrap %}

    {% set btn_class = btn_class is not defined or btn_class is empty ? 'btn-secondary' : btn_class %}

    <div class="dropdown">
        <button class="btn {{ btn_class }} dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            {{ button_caption|raw }}
            <span class="caret"></span>
        </button>

        {{ bootstrap.dropdown_menu(item_list) }}
    </div>
{% endmacro %}

{% macro dropdown_menu(item_list) %}
    {% import _self as bootstrap %}

    <div class="dropdown-menu">
        {% if item_list is defined and item_list is iterable %}
            {% for item in item_list %}
                {% set class = ['dropdown-item'] %}

                {% set class = item.active is defined and item.active == true ? class | merge(['active']) : class %}

                {% set class = item.disabled is defined and item.disabled == true ? class | merge(['disabled']) : class %}

                {% set attributes = { 'href': item.href } %}

                {% if item.attr is defined and item.attr is iterable %}
                    {% if item.attr.class is defined %}
                        {% set class = class | merge(item.attr.class | split(' ')) %}
                    {% endif %}

                    {% set attributes = attributes | merge(item.attr) %}
                {% endif %}

                {% set attributes = attributes | merge({'class': class | join(' ')}) %}

                {{ bootstrap.create_html_tag('a', attributes, item.caption) }}
            {% endfor %}
        {% endif %}
    </div>
{% endmacro %}

{% macro tabs(item_list) %}
    {% import _self as bootstrap %}

    <ul class="nav nav-tabs" role="tablist">
        {% if item_list is defined and item_list is iterable %}
            {% for item in item_list %}
                {{ bootstrap.nav_element(item) }}
            {% endfor %}
        {% endif %}
    </ul>
{% endmacro %}

{% macro nav_element(item) %}
    {% import _self as bootstrap %}

    {% set li_attr = { class: 'nav-item' } %}

    {% set a_attr = { 'data-toggle': 'tab', role: 'tab', id: item.href ~ '-tab', href: '#' ~ item.href, 'aria-controls': item.href } %}
    {% set a_class = ['nav-link'] %}

    {% if item.active is defined and item.active == true %}
    {% set a_class = a_class | merge(['active']) %}
    {% set a_attr = a_attr | merge({ 'aria-selected': 'true'} ) %}
    {% endif %}

    {% if item.disabled is defined and item.disabled == true %}
    {% set a_class = a_class | merge(['disabled']) %}
    {% endif %}

    {% set a_attr = a_class | length > 0 ? a_attr | merge({'class': a_class | join(' ')}) : a_attr %}

    {% set a_element %}{{ bootstrap.create_html_Tag('a', a_attr, item.caption|raw) }}{% endset %}

    {{ bootstrap.create_html_Tag('li', li_attr, a_element) }}
{% endmacro %}

{% macro tab_panels(item_list) %}
    {% import _self as bootstrap %}

    <div class="tab-content">
        {% for item in item_list %}
            {% set class = ['tab-pane', 'fade'] %}
            {% set attr = { id: item.id, role: 'tabpanel', 'aria-labelledby': item.id ~ '-tab' } %}

            {% if item.active is defined and item.active == true %}
                {% set class = class | merge(['show', 'active']) %}
            {% endif %}

            {% set attr = attr | merge({'class': class | join(' ')}) %}

            {{ bootstrap.create_html_Tag('div', attr, item.content) }}
        {% endfor %}
    </div>
{% endmacro %}

{% macro modal(modal_id, title, body, attr, footer_button_list) %}
    {% import _self as bootstrap %}

    <div class="modal fade" id="{{ modal_id }}" tabindex="-1" role="dialog" aria-labelledby="{{ modal_id }}-title" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable" role="document">
            {% if attr is defined and attr is iterable and attr.pre_content %}
                {{ attr.pre_content }}
            {% endif %}
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="{{ modal_id }}-title">
                        {{ title }}
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    {{ body | raw }}
                </div>

                {% if footer_button_list is defined and footer_button_list is iterable and footer_button_list | length > 0 %}
                <div class="modal-footer">
                    <div class="btn-group">
                        {% for button_item in footer_button_list %}
                            {{ bootstrap.button(button_item.caption, button_item.href, button_item.class, button_item.attr) }}
                        {% endfor %}
                    </div>
                </div>
                {% endif %}
            </div>
            {% if attr is defined and attr is iterable and attr.post_content %}
                {{ attr.post_content }}
            {% endif %}
        </div>
    </div>
{% endmacro %}

{% macro button(caption, href, class, attr) %}
    {% import _self as bootstrap %}

    {% if class is not defined or class is empty %}
        {% set class = ['btn', 'btn-secondary'] %}
    {% endif %}
    {% set class = class | split(' ') | merge(['btn']) %}

    {% set attributes = attr is defined and attr != null and attr is iterable ? attr : {} %}

    {% set tag_name = href is defined and href != null ? 'a' : 'button' %}

    {% if href is defined and href != null %}
        {% set attributes = attributes | merge( { 'href': href } ) %}
        {% set tag_name = 'a' %}
    {% else %}
        {% set tag_name = 'button' %}

        {% if attr is not defined or attr is not iterable or attr.type is not defined or attr.type is empty %}
            {% set attributes = attributes | merge( { 'type': 'button' } ) %}
        {% endif %}
    {% endif %}

    {% set attributes = attributes | merge({'class': class|join(' ')}) %}

    {{ bootstrap.create_html_tag(tag_name, attributes, caption) }}
{% endmacro %}

{% macro link(caption, href, class, attr) %}
    {% import _self as bootstrap %}

    {% if class is not defined or class is empty %}
        {% set class = [] %}
    {% endif %}

    {% set attributes = attr is defined and attr != null and attr is iterable ? attr : {} %}

    {% if href is defined and href != null %}
        {% set attributes = attributes | merge( { 'href': href } ) %}
    {% endif %}

    {% set attributes = attributes | merge({'class': class|join(' ')}) %}

    {{ bootstrap.create_html_tag('a', attributes, caption) }}
{% endmacro %}

{% macro breadcrumb_item(caption, href, active) %}
    {% import _self as bootstrap %}

    {% set class = ['breadcrumb-item'] %}
    {% set attributes = {} %}

    {% if active == true %}
    {% set class = class | merge(['active']) %}
    {% set attributes = { 'aria-current': 'page' }  %}
    {% endif %}

    {% set attributes = attributes | merge({'class': class|join(' ')}) %}

    {% set link = bootstrap.link(caption, href) %}
    {{ bootstrap.create_html_tag('li', attributes, link) }}
{% endmacro %}