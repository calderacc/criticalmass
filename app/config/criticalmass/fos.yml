fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User #Application\Sonata\UserBundle\Entity\User
#    group:
#        group_class:   Application\Sonata\UserBundle\Entity\Group
#        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)
#    service:
#        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)
    registration:
        confirmation:
            enabled:    false
#            from_email:
#                address:        malte@criticalmass.in
#                sender_name:    Malte Hübner, criticalmass.in
    resetting:
        email:
            from_email:
                address:        malte@criticalmass.in
                sender_name:    Malte Hübner, criticalmass.in
    from_email:
        address: mail@criticalmass.in
        sender_name: criticalmass.in

fos_rest:
    view:
        formats:
            json: true
            xml: false
            html: false
            rss: false
        templating_formats:
            json: false
            xml: false
            html: false
            rss: false
        force_redirects:
            html: false
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
    service:
        serializer: fos_rest.serializer.jms
    serializer:
        groups:               []
        serialize_null:       true

fos_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    indexes:
        criticalmass:
            client: default
            finder:
            settings:
                index:
                    analysis:
                        analyzer:
                            umlauts_analyzer:
                                type: custom
                                tokenizer: lowercase
                                filter   : [umlauts_filter]
                        filter:
                            umlauts_filter:
                                type: "asciifolding"
            types:
                help_category:
                    mappings:
                        id: ~
                        title: ~
                        intro: ~
                    persistence:
                        driver: orm
                        model: Criticalmass\Bundle\AppBundle\Entity\HelpCategory
                        provider: ~
                        listener: ~
                        finder: ~
                help_item:
                    mappings:
                        id: ~
                        title: ~
                        text: ~
                    persistence:
                        driver: orm
                        model: Criticalmass\Bundle\AppBundle\Entity\HelpItem
                        provider: ~
                        listener: ~
                        finder: ~
                ride:
                    mappings:
                        id: ~
                        title: ~
                        description: ~
                        city: { type: string, index: not_analyzed }
                        country: { type: string, index: not_analyzed }
                        location: ~
                        isEnabled: ~
                        dateTime: ~
                        simpleDate: { type: date, format: "yyyy-MM-dd" }
                        pin: { type: geo_point }
                    persistence:
                        driver: orm
                        model: Criticalmass\Bundle\AppBundle\Entity\Ride
                        provider: ~
                        listener: ~
                        finder: ~
                city:
                    mappings:
                        id: ~
                        title: ~
                        description: ~
                        longDescription: ~
                        punchLine: ~
                        isEnabled: ~
                        country: { type: string, index: not_analyzed }
                        pin: { type: geo_point }
                    persistence:
                        driver: orm
                        model: Criticalmass\Bundle\AppBundle\Entity\City
                        provider: ~
                        listener: ~
                        finder: ~
